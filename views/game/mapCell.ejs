<%
    let tile = cell.tile;

    let tileStack = [];

    let food = tile.food;
    let gold = tile.gold;

    let clickable = false;
    let onClick = null;

    let className = 'map-cell boardnum-' + boardnum;

    let allowTileEntry = true;

    if (boardnum != 1) {
        className += ' off-screen';
    }

    if (cell.lit || cell.owned || cell.discovered) {
        if (tile.terrain.water) {
            tileStack.push('water');
        } else {
            tileStack.push(tile.terrain.ground);
        }

        cell.edges.coast.forEach(edge => {
            tileStack.push(edge);
        });

        if (cell.player) {
            className += ' player' + cell.player;
            cell.edges.territory.forEach(edge => {
                tileStack.push(edge);
            });
        }

        if (tile.terrain.mountain) {
            tileStack.push('mountain');
        }

        if (tile.terrain.hill) {
            tileStack.push('hill');
        }

        tileStack = tileStack.concat(cell.edges.road);

        if (tile.terrain.forest) {
            tileStack.push('forest');
        }

        if (tile.improvement) {
            let improvementName = tile.improvement.split(' ').join('-');
            className += ' ' + improvementName;
            tileStack.push('improvement improvement-' + improvementName);
        }

        if (cell.myCity || cell.myUnit) {
            tileStack.push('highlight');
            clickable = true;
        }

        if (cell.myCity || cell.rivalCity) {
            tileStack.push('city');
        }

        if (cell.lit) {
            cell.edges.fog.forEach(edge => {
                tileStack.push(edge);
            });
        } else {
            className += ' fog';
            tileStack.push('fog');
        }

        cell.edges.dark.forEach(edge => {
            tileStack.push(edge);
        });

        if (clickable) {
            className += ' clickable';
            onClick = 'clickMapCell(' + r + ', ' + c + ')';
        }

        if (cell.rivalUnit || cell.rivalCity) {
            allowTileEntry = false;
        } else if (cell.myUnit) {
            if (cell.tile.terrain.water) {
                const waterUnit = helpers.findUnit(units, cell.unitId);
                if (waterUnit.templateName != 'galley') {
                    allowTileEntry = false;
                }
            } else {
                allowTileEntry = false;
            }
        }
    } else {
        className += ' notDiscovered';
    }
%>

<div class="<%= className %>" row="<%= r %>" column="<%= c %>"
        onMouseover="hoverMapCell(<%= r %>, <%= c %>)"
        onClick="<%= onClick %>">

    <% tileStack.forEach(layer => { %>
        <div class="tile-stack layer-<%= layer %>"> </div>
    <% }); %>

    <% if (cell.myUnit || cell.rivalUnit) { %>
        <%
            const unit = unitsById[cell.unitId];
            const stackClass = 'tile-stack layer-unit unit-' + unit.templateName;
        %>
        <div class="<%= stackClass %>" unit-id="<%= cell.unitId %>"> </div>
    <% } %>

    <% if (allowTileEntry) { %>
        <% cell.moves.forEach(move => { %>
            <form action="<%= move.path %>" method="post"
                class="move-unit <%= move.direction %>"
                unit-id="<%= move.unitId %>"
                onClick="$(this).submit()">
            </form>
        <% }); %>
    <% } %>

    <% cell.workTiles.forEach(workTile => { %>
        <form action="<%= workTile.path %>" method="post"
            class="work-tile working-<%= workTile.working %>"
            city-id="<%= workTile.cityId %>"
            <% if (workTile.working != 'disabled') { %>
                onClick="$(this).submit()"
            <% } %>
            >
        </form>
    <% }); %>

    <% cell.buyTiles.forEach(buyTile => { %>
        <% const affordable = currentPlayer.storage.gold >= buyTile.price; %>
        <form action="<%= buyTile.path %>" method="post"
            class="buy-tile is-<%= affordable %>"
            city-id="<%= buyTile.cityId %>"
            <% if (affordable) { %>
                onClick="$(this).submit()"
            <% } %>
            >
            <%= buyTile.price %>
        </form>
    <% }); %>
</div>
