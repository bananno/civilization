<%
  const isDark = (row, col) => {
    if (row < 0 || row >= numRows) {
      return true;
    }
    return !map[row][col].discovered;
  };

  let shiftRow = false;

  for (let r = 0; r < numRows; r++) {
    shiftRow = !shiftRow;
    for (let c = 0; c < numCols; c++) {

      if (isDark(r, c)) {
        continue;
      }

      let c1 = helpers.getColumn(numCols, c - 1);
      let c2 = helpers.getColumn(numCols, c + 1);

      const edges = {};

      edges.left = isDark(r, c1);
      edges.right = isDark(r, c2);

      if (shiftRow) {
        c1 = c;
      } else {
        c2 = c;
      }

      edges.topLeft = isDark(r - 1, c1);
      edges.topRight = isDark(r - 1, c2);
      edges.bottomLeft = isDark(r + 1, c1);
      edges.bottomRight = isDark(r + 1, c2);

      if (edges.topLeft && edges.topRight) {
        map[r][c].edges.push('side-dark side-top');
      }

      if (edges.left) {
        map[r][c].edges.push('side-dark side-left');
      }

      if (edges.bottomLeft && edges.bottomRight) {
        map[r][c].edges.push('side-dark side-bottom');
      }

      if (edges.right) {
        map[r][c].edges.push('side-dark side-right');
      }
    }
  }
%>
